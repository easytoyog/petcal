plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"            // <-- modern id; matches settings.gradle
    id "dev.flutter.flutter-gradle-plugin"       // keep Flutter plugin after Android/Kotlin
    id "com.google.gms.google-services"
}

def keyProperties = new Properties()
def keyPropertiesFile = rootProject.file('key.properties')
def hasKeystore = keyPropertiesFile.exists()
if (hasKeystore) {
    keyProperties.load(new FileInputStream(keyPropertiesFile))
}

android {
    namespace "ca.inthepark"
    compileSdkVersion 35
    ndkVersion "27.0.12077973"

    defaultConfig {
        applicationId "ca.inthepark"
        minSdkVersion 23
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
        freeCompilerArgs += ["-Xjvm-default=all"]
    }
    kotlin {
        jvmToolchain(17)
    }

    signingConfigs {
        release {
            if (hasKeystore) {
                storeFile file(keyProperties['storeFile'])
                storePassword keyProperties['storePassword']
                keyAlias keyProperties['keyAlias']
                keyPassword keyProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            // If no keystore, fall back to debug signing so you can still produce a release build locally.
            signingConfig hasKeystore ? signingConfigs.release : signingConfigs.debug
            // (optional) shrinker:
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // keep default debug signing
        }
    }
}

dependencies {
    // Firebase BoM controls Firebase library versions
    implementation platform('com.google.firebase:firebase-bom:33.7.0')

    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'

    // App Check (debug/prod)
    debugImplementation   'com.google.firebase:firebase-appcheck-debug'
    releaseImplementation 'com.google.firebase:firebase-appcheck-playintegrity'
}

flutter {
    source "../.."
}
